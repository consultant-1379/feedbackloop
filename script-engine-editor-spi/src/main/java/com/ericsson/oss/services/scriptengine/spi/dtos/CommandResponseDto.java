/*------------------------------------------------------------------------------
 *******************************************************************************
 * COPYRIGHT Ericsson 2012
 *
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 *******************************************************************************
 *----------------------------------------------------------------------------*/
package com.ericsson.oss.services.scriptengine.spi.dtos;

import java.io.Serializable;
import java.util.ArrayList;

public class CommandResponseDto extends AbstractResponse implements Serializable {

    private static final long serialVersionUID = 6213331989804757478L;

    private ResponseDto responseDto;
    private String command;

    /**
     * Default constructor. Will initialize responseDto and set command as
     * Undefined.
     */
    public CommandResponseDto() {
        this("Undefined", new ResponseDto(new ArrayList<AbstractDto>()));
    }

    /**
     * Alternative constructor. Will initialize responseDto and set command as
     * provided.
     * 
     * @param command
     */
    public CommandResponseDto(final String command) {
        this(command, new ResponseDto(new ArrayList<AbstractDto>()));
    }

    /**
     * Alternative constructor. Will set command as Undefined and responseDto as
     * provided.
     * 
     * @param responseDto
     */
    public CommandResponseDto(final ResponseDto responseDto) {
        this("Undefined", responseDto);
    }

    /**
     * Alternative constructor. Will set the fields as provided.
     * 
     * @param command
     * @param responseDto
     */
    public CommandResponseDto(final String command, final ResponseDto responseDto) {
        this.command = command;
        this.responseDto = responseDto;
    }

    /**
     * @return the command
     */
    public String getCommand() {
        return command;
    }

    /**
     * @param command
     *            the command to set
     */
    public void setCommand(final String command) {
        this.command = command;
    }

    /**
     * @param responseDto
     */
    public void setResponseDto(final ResponseDto responseDto) {
        this.responseDto = responseDto;
    }

    /**
     * Retrieve the dto (i.e. data) generated by the command
     * 
     * @return the dto (i.e. data) generated by the command
     */
    public ResponseDto getResponseDto() {
        return responseDto;
    }

    /**
     * Add an empty line to the elements of responseDto.
     */
    public void addEmptyLine() {
        addLine("".intern());
    }

    /**
     * Add a line to the elements of responseDto.
     * 
     * @param value
     *            the line content
     */
    public void addLine(final String value) {
        getResponseDto().getElements().add(new LineDto(value));
    }

    /**
     * Convenient method to add success lines.
     * 
     * Add an empty line and a line with statusMessage;
     */
    public void addSuccessLines() {
        addEmptyLine();
        addStatusLine();
    }

    /**
     * Convenient method to add error lines.
     * 
     * Add an empty line, a line with errorCode and statusMessage and a line
     * with statusMessage;
     */
    public void addErrorLines() {
        addEmptyLine();
        addErrorLine();
        addSolutionLine();
    }

    private void addErrorLine() {
        addErrorLine(getErrorCode(), getStatusMessage());
    }

    private void addErrorLine(final int errorCode, final String message) {
        addLine("Error " + errorCode + " : " + message);
    }

    private void addStatusLine() {
        addLine(getStatusMessage());
    }

    private void addSolutionLine() {
        addSolutionLine(getSolution());
    }

    private void addSolutionLine(final String solution) {
        addLine("Suggested Solution : " + solution);
    }
}
